(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{427:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue-基础面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-基础面试题"}},[t._v("#")]),t._v(" vue 基础面试题")]),t._v(" "),a("h3",{attrs:{id:"mvc和mvvm理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mvc和mvvm理解"}},[t._v("#")]),t._v(" mvc和mvvm理解")]),t._v(" "),a("p",[t._v("mvc：")]),t._v(" "),a("p",[t._v("MVC 即 Model View Controller，简单来说就是通过 controller 的控制去操作 model 层的数据，并且返回给 view 层展示。")]),t._v(" "),a("ul",[a("li",[t._v("View 接受用户交互请求")]),t._v(" "),a("li",[t._v("View 将请求转交给Controller处理")]),t._v(" "),a("li",[t._v("Controller 操作Model进行数据更新保存")]),t._v(" "),a("li",[t._v("数据更新保存之后，Model会通知View更新")]),t._v(" "),a("li",[t._v("View 更新变化数据使用户得到反馈")])]),t._v(" "),a("p",[t._v("MVVM：")]),t._v(" "),a("p",[t._v("MVVM 即 Model-View-ViewModel，将其中的 View 的状态和行为抽象化，让我们可以将UI和业务逻辑分开。MVVM的优点是低耦合、可重用性、独立开发。")]),t._v(" "),a("ul",[a("li",[t._v("View 接收用户交互请求")]),t._v(" "),a("li",[t._v("View 将请求转交给 ViewModel")]),t._v(" "),a("li",[t._v("ViewModel 操作 Model 数据更新")]),t._v(" "),a("li",[t._v("Model 更新完数据，通知 ViewModel 数据发生变化")]),t._v(" "),a("li",[t._v("ViewModel 更新 View 数据")])]),t._v(" "),a("p",[t._v("MVVM模式和MVC有些类似，但有以下不同：")]),t._v(" "),a("ul",[a("li",[t._v("ViewModel 替换了 Controller，在UI层之下")]),t._v(" "),a("li",[t._v("ViewModel 向 View 暴露它所需要的数据和指令对象")]),t._v(" "),a("li",[t._v("ViewModel 接收来自 Model 的数据")])]),t._v(" "),a("p",[t._v("概括起来，MVVM 是由 MVC 发展而来，通过在 Model 之上而在 View 之下增加一个非视觉的组件将来自 Model 的数据映射到 View中。")]),t._v(" "),a("h3",{attrs:{id:"生命周期函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期函数"}},[t._v("#")]),t._v(" 生命周期函数")]),t._v(" "),a("ul",[a("li",[t._v("beforeCreate(创建前) vue 实例的挂载元素 $el 和数据对象 data都是undefined, 还未初始化")]),t._v(" "),a("li",[t._v("created(创建后) 完成了 data 数据初始化, el 还未初始化")]),t._v(" "),a("li",[t._v("beforeMount(载入前) vue实例的$el和data都初始化了, 相关的render函数首次被调用")]),t._v(" "),a("li",[t._v("mounted(载入后) 此过程中进行 ajax 交互")]),t._v(" "),a("li",[t._v("beforeUpdate(更新前)")]),t._v(" "),a("li",[t._v("updated(更新后)")]),t._v(" "),a("li",[t._v("beforeDestroy(销毁前)")]),t._v(" "),a("li",[t._v("destroyed(销毁后)")])]),t._v(" "),a("h3",{attrs:{id:"组件data为什么返回函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件data为什么返回函数"}},[t._v("#")]),t._v(" 组件data为什么返回函数")]),t._v(" "),a("p",[t._v("因为组件是可以复用的,JS 里对象是引用关系,如果组件 data 是一个对象,那么子组件中的 data 属性值会互相污染,产生副作用。")]),t._v(" "),a("p",[t._v("所以一个组件的 data 选项必须是一个函数,因此每个实例可以维护一份被返回对象的独立的拷贝。new Vue 的实例是不会被复用的,因此不存在以上问题。")]),t._v(" "),a("h3",{attrs:{id:"vue给对象新增属性页面没有响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue给对象新增属性页面没有响应"}},[t._v("#")]),t._v(" vue给对象新增属性页面没有响应")]),t._v(" "),a("p",[t._v("由于 Vue 会在初始化实例时对属性执行 getter/setter 转化，所以属性必须在 data 对象上存在才能让 Vue 将它转换为响应式的。Vue 提供了 $set 方法用来触发视图更新。")]),t._v(" "),a("h3",{attrs:{id:"v-if和v-show区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-if和v-show区别"}},[t._v("#")]),t._v(" v-if和v-show区别")]),t._v(" "),a("p",[t._v("v-if 是真正的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建；也是惰性的：如果在初始渲染时条件为假，则什么也不做——直到条件第一次变为真时，才会开始渲染条件块。")]),t._v(" "),a("p",[t._v("v-show 就简单得多——不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 的 “display” 属性进行切换。")]),t._v(" "),a("p",[t._v("所以，v-if 适用于在运行时很少改变条件，不需要频繁切换条件的场景；v-show 则适用于需要非常频繁切换条件的场景。")]),t._v(" "),a("h3",{attrs:{id:"scoped属性作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scoped属性作用"}},[t._v("#")]),t._v(" scoped属性作用")]),t._v(" "),a("p",[t._v("在 Vue 文件中的 style 标签上有一个特殊的属性，scoped。当一个 style 标签拥有 scoped 属性时候，它的 css 样式只能用于当前的Vue组件，可以使组件的样式不相互污染。如果一个项目的所有 style 标签都加上了scoped属性，相当于实现了样式的模块化。")]),t._v(" "),a("p",[t._v("scoped 属性的实现原理是给每一个dom元素添加了一个独一无二的动态属性，给 css 选择器额外添加一个对应的属性选择器，来选择组件中的 dom。")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("dom"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("scss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scoped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("vue将代码转译成如下：")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v(".box[data-v-11c6864c]{\n    background:red;\n}\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("data-v-11c6864c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("dom"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"scoped样式穿透"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scoped样式穿透"}},[t._v("#")]),t._v(" scoped样式穿透")]),t._v(" "),a("p",[t._v("scoped 虽然避免了组件间样式污染，但是很多时候我们需要修改组件中的某个样式，但是又不想去除 scoped 属性。")]),t._v(" "),a("ol",[a("li",[t._v("使用 "),a("code",[t._v("/deep/")])]),t._v(" "),a("li",[t._v("使用两个 style 标签")])]),t._v(" "),a("h3",{attrs:{id:"ref的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref的作用"}},[t._v("#")]),t._v(" ref的作用")]),t._v(" "),a("ol",[a("li",[t._v("获取 dom 元素： "),a("code",[t._v("this.$refs.box")])]),t._v(" "),a("li",[t._v("获取子组件中的 data： "),a("code",[t._v("this.$refs.box.msg")])]),t._v(" "),a("li",[t._v("调用子组件中的方法： "),a("code",[t._v("this.$refs.box.open()")])])]),t._v(" "),a("h3",{attrs:{id:"vue路由有几种模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue路由有几种模式"}},[t._v("#")]),t._v(" vue路由有几种模式")]),t._v(" "),a("ol",[a("li",[t._v("hash模式")])]),t._v(" "),a("p",[t._v("即地址栏URL中的#符号，它的特点在于：hash 虽然出现URL中，但不会被包含在HTTP请求中，对后端完全没有影响，不需要后台进行配置，因此改变hash不会重新加载页面。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("history模式")])]),t._v(" "),a("p",[t._v("利用了HTML5 History Interface 中新增的 "),a("code",[t._v("pushState()")]),t._v(" 和 "),a("code",[t._v("replaceState()")]),t._v(" 方法（需要特定浏览器支持）。history 模式改变了路由地址，因为需要后台配置地址。")]),t._v(" "),a("h3",{attrs:{id:"组件之间的传值通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件之间的传值通信"}},[t._v("#")]),t._v(" 组件之间的传值通信")]),t._v(" "),a("ol",[a("li",[t._v("父组件给子组件传值通过 props")]),t._v(" "),a("li",[t._v("子组件给父组件传值通过 $emit 触发回调")]),t._v(" "),a("li",[t._v("兄弟组件通信，通过实例一个 vue 实例 eventBus 作为媒介，要相互通信的兄弟组件之中，都引入 eventBus")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//main.js\nimport Vue from 'vue'\nexport const eventBus = new Vue()\n\n//brother1.vue\nimport eventBus from '@/main.js'\nexport default{\n\tmethods: {\n\t    toBus () {\n\t        eventBus.$emit('greet', 'hi brother')\n\t    }\n\t}\n}\n\n//brother2\nimport eventBus from '@/main.js'\nexport default{\n    mounted(){\n        eventBus.$on('greet', (msg)=>{\n            this.msg = msg\n        })\n    }\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("p",[t._v("更多请看 "),a("a",{attrs:{href:"https://cchroot.github.io/2020/04/12/vue%E7%BB%84%E4%BB%B6%E9%97%B4%E9%80%9A%E4%BF%A1%E5%85%AB%E7%A7%8D%E6%96%B9%E5%BC%8F/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue组件间通信八种方式"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"vue-组件间通信有哪几种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件间通信有哪几种方式"}},[t._v("#")]),t._v(" Vue 组件间通信有哪几种方式？")]),t._v(" "),a("p",[t._v("（1）props / $emit 适用 父子组件通信")]),t._v(" "),a("p",[t._v("这种方法是 Vue 组件的基础，相信大部分同学耳闻能详，所以此处就不举例展开介绍。")]),t._v(" "),a("p",[t._v("（2）ref 与 $parent / $children 适用 父子组件通信")]),t._v(" "),a("p",[t._v("ref：如果在普通的 DOM 元素上使用，引用指向的就是 DOM 元素；如果用在子组件上，引用就指向组件实例\n$parent / $children：访问父 / 子实例\n（3）EventBus （$emit / $on） 适用于 父子、隔代、兄弟组件通信")]),t._v(" "),a("p",[t._v("这种方法通过一个空的 Vue 实例作为中央事件总线（事件中心），用它来触发事件和监听事件，从而实现任何组件间的通信，包括父子、隔代、兄弟组件。")]),t._v(" "),a("p",[t._v("（4）$attrs/$listeners 适用于 隔代组件通信")]),t._v(" "),a("p",[t._v('$attrs：包含了父作用域中不被 prop 所识别 (且获取) 的特性绑定 ( class 和 style 除外 )。当一个组件没有声明任何 prop 时，这里会包含所有父作用域的绑定 ( class 和 style 除外 )，并且可以通过 v-bind="$attrs" 传入内部组件。通常配合 inheritAttrs 选项一起使用。\n$listeners：包含了父作用域中的 (不含 .native 修饰器的) v-on 事件监听器。它可以通过 v-on="$listeners" 传入内部组件\n（5）provide / inject 适用于 隔代组件通信')]),t._v(" "),a("p",[t._v("祖先组件中通过 provider 来提供变量，然后在子孙组件中通过 inject 来注入变量。 provide / inject API 主要解决了跨级组件间的通信问题，不过它的使用场景，主要是子组件获取上级组件的状态，跨级组件间建立了一种主动提供与依赖注入的关系。")]),t._v(" "),a("p",[t._v("（6）Vuex 适用于 父子、隔代、兄弟组件通信")]),t._v(" "),a("p",[t._v("Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。每一个 Vuex 应用的核心就是 store（仓库）。“store” 基本上就是一个容器，它包含着你的应用中大部分的状态 ( state )。")]),t._v(" "),a("h3",{attrs:{id:"computed-和-watch-有什么区别及运用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed-和-watch-有什么区别及运用场景"}},[t._v("#")]),t._v(" computed 和 watch 有什么区别及运用场景?")]),t._v(" "),a("p",[a("strong",[t._v("区别")]),t._v(":")]),t._v(" "),a("p",[t._v("computed 计算属性 : 依赖其它属性值,并且 computed 的值有缓存,只有它依赖的属性值发生改变,下一次获取 computed 的值时才会重新计算 computed 的值。")]),t._v(" "),a("p",[t._v("watch 侦听器 : 更多的是「观察」的作用,"),a("strong",[t._v("无缓存性")]),t._v(",类似于某些数据的监听回调,每当监听的数据变化时都会执行回调进行后续操作。")]),t._v(" "),a("p",[a("strong",[t._v("运用场景")]),t._v(":")]),t._v(" "),a("p",[t._v("当我们需要进行数值计算,并且依赖于其它数据时,应该使用 computed,因为可以利用 computed 的缓存特性,避免每次获取值时,都要重新计算。")]),t._v(" "),a("p",[t._v("当我们需要在数据变化时执行异步或开销较大的操作时,应该使用 watch,使用 watch 选项允许我们执行异步操作 ( 访问一个 API ),限制我们执行该操作的频率,并在我们得到最终结果前,设置中间状态。这些都是计算属性无法做到的。")]),t._v(" "),a("h3",{attrs:{id:"vue-和-react-中的-key-到底有什么用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-和-react-中的-key-到底有什么用"}},[t._v("#")]),t._v(" Vue 和 React 中的 key 到底有什么用？")]),t._v(" "),a("p",[t._v("key 是给每一个 vnode 的唯一 id,依靠 key,我们的 diff 操作可以更准确、更快速 (对于简单列表页渲染来说 diff 节点也更快,但会产生一些隐藏的副作用,比如可能不会产生过渡效果,或者在某些节点有绑定数据（表单）状态，会出现状态错位。)")]),t._v(" "),a("p",[t._v("diff 算法的过程中,先会进行新旧节点的首尾交叉对比,当无法匹配的时候会用新节点的 key 与旧节点进行比对,从而找到相应旧节点。")]),t._v(" "),a("p",[t._v("更准确 : 因为带 key 就不是就地复用了,在 sameNode 函数  a.key === b.key 对比中可以避免就地复用的情况。所以会更加准确,如果不加 key,会导致之前节点的状态被保留下来,会产生一系列的 bug。")]),t._v(" "),a("p",[t._v("更快速 : key 的唯一性可以被 Map 数据结构充分利用,相比于遍历查找的时间复杂度 O(n),Map 的时间复杂度仅仅为 O(1),源码如下:")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v(" createKeyToOldIdx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beginIdx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endIdx")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v(" ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" beginIdx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" endIdx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v(" ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);